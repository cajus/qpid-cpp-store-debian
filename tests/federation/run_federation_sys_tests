#!/bin/bash
#
# Copyright (c) 2008, 2009 Red Hat, Inc.
#
# This file is part of the Qpid async store library msgstore.so.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301
# USA
#
# The GNU Lesser General Public License is available in the file COPYING.


# Run the federation tests.
source ${abs_srcdir}/federation_tests_env.sh

MODULENAME=federation_sys

# Test for long test
if [[ "$1" == "LONG_TEST" ]]; then
    USE_LONG_TEST=1
    shift # get rid of this param so it is not treated as a test name
fi

trap stop_brokers INT TERM QUIT

MODULES="--load-module ${STORE_LIB} --jfile-size 12 --num-jfiles 4"
CLUSTER_MODULE="--load-module ${CLUSTER_LIB} "
if [ -z ${USE_LONG_TEST} ]; then
    SKIPTESTS="-i federation_sys.A_Long* -i federation_sys.B_Long* -i federation_sys.E_Long* -i federation_sys.F_Long*"
fi
if [ -z ${CLUSTERING_ENABLED} ]; then
    SKIPTESTS="${SKIPTESTS} -i federation_sys.C_* -i federation_sys.D_* -i federation_sys.G_* -i federation_sys.H_*"
elif [ -z ${USE_LONG_TEST} ]; then
    SKIPTESTS="${SKIPTESTS} -i federation_sys.C_Long* -i federation_sys.D_Long* -i federation_sys.G_Long* -i federation_sys.H_Long*"
fi

start_brokers() {
    clean_or_create_dir() {
        if [ -n "$1" -a -d $1 ]; then
            rm -rf $1/*
        else
            mkdir -p $1
        fi
    }
    start_broker() {
        clean_or_create_dir $1
        ${QPIDD_EXEC} --daemon --port 0 --auth no --data-dir $1 $2 > qpidd.port
        PORT=`cat qpidd.port`
        eval "$3=${PORT}"
    }
    start_broker ${TMP_DATA_DIR}/local "${MODULES} --log-enable info+ --log-to-file ${TMP_DATA_DIR}/qpidd.log.local" LOCAL_PORT
    start_broker ${TMP_DATA_DIR}/remote "${MODULES} --log-enable info+ --log-to-file ${TMP_DATA_DIR}/qpidd.log.remote" REMOTE_PORT
    if [ -n "$CLUSTERING_ENABLED" ]; then
        start_broker ${TMP_DATA_DIR}/cluster/c1.1 "${MODULES} ${CLUSTER_MODULE} --cluster-name test-cluster-1 --log-enable info+ --log-to-file ${TMP_DATA_DIR}/qpidd.log.cluster1.1" CLUSTER_C1_1
        start_broker ${TMP_DATA_DIR}/cluster/c1.2 "${MODULES} ${CLUSTER_MODULE} --cluster-name test-cluster-1 --log-enable info+ --log-to-file ${TMP_DATA_DIR}/qpidd.log.cluster1.2" CLUSTER_C1_2
        start_broker ${TMP_DATA_DIR}/cluster/c2.1 "${MODULES} ${CLUSTER_MODULE} --cluster-name test-cluster-2 --log-enable info+ --log-to-file ${TMP_DATA_DIR}/qpidd.log.cluster2.1" CLUSTER_C2_1
        start_broker ${TMP_DATA_DIR}/cluster/c2.2 "${MODULES} ${CLUSTER_MODULE} --cluster-name test-cluster-2 --log-enable info+ --log-to-file ${TMP_DATA_DIR}/qpidd.log.cluster2.2" CLUSTER_C2_2
    fi
    rm qpidd.port
}

stop_brokers() {
    ${QPIDD_EXEC} -q --port ${LOCAL_PORT}
    ${QPIDD_EXEC} -q --port ${REMOTE_PORT}
    if [ -n "${CLUSTERING_ENABLED}" ]; then
        ${QPID_CLUSTER_EXEC} --all-stop --force localhost:${CLUSTER_C1_1}
        ${QPID_CLUSTER_EXEC} --all-stop --force localhost:${CLUSTER_C2_1}
    fi
}

if test -d ${PYTHON_DIR} ;  then
    start_brokers
    if [ -z ${CLUSTERING_ENABLED} ]; then
        echo "Running federation tests using brokers on local port ${LOCAL_PORT}, remote port ${REMOTE_PORT} (NOTE: clustering is DISABLED)"
    else
        echo "Running federation tests using brokers on local port ${LOCAL_PORT}, remote port ${REMOTE_PORT}, local cluster nodes ${CLUSTER_C1_1} ${CLUSTER_C1_2}, remote cluster nodes ${CLUSTER_C2_1} ${CLUSTER_C2_2}"
    fi
    if [ -z ${USE_LONG_TEST} ]; then
        echo "NOTE: To run a full set of federation system tests, use \"make check-long\"."
    fi
    ${QPID_PYTHON_TEST} -m ${MODULENAME} ${SKIPTESTS} -b localhost:$REMOTE_PORT -Dlocal-port=$LOCAL_PORT -Dremote-port=$REMOTE_PORT -Dlocal-cluster-ports="$CLUSTER_C1_1 $CLUSTER_C1_2" -Dremote-cluster-ports="$CLUSTER_C2_1 $CLUSTER_C2_2" $@
    RETCODE=$?
    stop_brokers
    if test x$RETCODE != x0; then
        echo "FAIL federation tests"; exit 1;
    fi
fi
